{"version":3,"file":"static/js/195.e19d6a70.chunk.js","mappings":"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","sources":["features/components/newsList/newsListItem/newListStyles.ts","features/components/newsList/newsListItem/NewsListItem.tsx","features/components/downloadButton/buttonDownloadStyles.ts","features/components/downloadButton/ButtonDownload.tsx","features/components/newsList/newsListStyles.ts","features/components/newsList/NewsList.tsx","pages/newsPage/NewsPage.tsx","redux/news/selectors/selectors.ts","../node_modules/@mui/icons-material/DeleteSweepOutlined.js"],"sourcesContent":["import {makeStyles} from \"@mui/styles\";\r\n\r\nexport const newListItemStyles = makeStyles({\r\n    itemWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        gap: \"10px\",\r\n        alignItems: \"center\",\r\n        padding:\"10px\"\r\n    },\r\n\r\n    itemContainer: {\r\n        padding: \"2px 20px\",\r\n        backgroundColor: \"lightgoldenrodyellow\",\r\n        boxShadow: \"3px 3px 3px 3px black\",\r\n        borderRadius: \"10px\",\r\n        width: \"100%\",\r\n    },\r\n\r\n    deleteIcon: {\r\n        borderLeft: \"1px solid black\",\r\n        width: \"40px\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: \"black\",\r\n        cursor: \"pointer\",\r\n        color: \"lightsteelblue\",\r\n        \"&:hover\": {\r\n            color: \"burlywood\",\r\n        },\r\n    },\r\n});","import React, { useCallback, useState } from \"react\";\r\nimport { AppDispatch } from \"../../../../redux/store\";\r\nimport { newListItemTypes } from \"./newListTypes\";\r\nimport {Box, Grid, ListItemText, Slide, Stack, Typography} from \"@mui/material\";\r\nimport DeleteSweepOutlinedIcon from \"@mui/icons-material/DeleteSweepOutlined\";\r\nimport { newListItemStyles } from \"./newListStyles\";\r\nimport { deleteNews } from \"../../../../redux/news/newsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n const  NewsListItem: React.FC<newListItemTypes> = ({ item }) => {\r\n  const [slide, setSlide] = useState(true);\r\n  const s = newListItemStyles();\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  const handleDelete = useCallback((id: number) => {\r\n    setTimeout(() => {\r\n      dispatch(deleteNews(id));\r\n    }, 800);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Slide in={slide} timeout={1000} direction=\"left\">\r\n      <Box className={s.itemContainer}>\r\n        <Box className={s.itemWrapper}>\r\n            <Stack direction=\"row\" justifyContent=\"end\" spacing={4}>\r\n            <Typography> {item.id}</Typography>\r\n            <Typography>{item.title}</Typography>\r\n            </Stack>\r\n          <DeleteSweepOutlinedIcon\r\n            className={s.deleteIcon}\r\n            onClick={(e) => {\r\n              handleDelete(item.id);\r\n                setSlide((prev) => !prev);\r\n            }}\r\n          >\r\n            delete\r\n          </DeleteSweepOutlinedIcon>\r\n        </Box>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\n export default React.memo(NewsListItem)","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const buttonDownloadStyles = makeStyles({\r\n  buttonWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"black\",\r\n    zIndex: \"1\",\r\n    width: \"160px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      color: \"burlywood\",\r\n    },\r\n  },\r\n});\r\n","import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { getNews } from \"../../../redux/news/selectors/selectors\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Box, Button, Slide } from \"@mui/material\";\r\nimport { increment, setFlag } from \"../../../redux/news/newsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { buttonDownloadStyles } from \"./buttonDownloadStyles\";\r\n\r\nconst ButtonDownload: React.FC = () => {\r\n  const s = buttonDownloadStyles();\r\n  const dispatch = useDispatch();\r\n  const lastRef = useRef<HTMLDivElement | null>(null);\r\n  const news = useSelector(getNews);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      lastRef?.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"end\",\r\n        inline: \"nearest\",\r\n      });\r\n    }, 1000);\r\n  }, [news]);\r\n\r\n  const showMore = useCallback(() => {\r\n    dispatch(increment());\r\n    dispatch(setFlag(false));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Slide in={true} timeout={1000} direction=\"right\">\r\n      <Box className={s.buttonWrapper}>\r\n        <Button\r\n          sx={{ color: \"lightsteelblue\", \"&:hover\": { color: \"burlywood\" } }}\r\n          onClick={showMore}\r\n        >\r\n          {t(\"download\")}\r\n        </Button>\r\n        <div ref={lastRef}></div>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default ButtonDownload;\r\n","import { makeStyles } from \"@mui/styles\";\n\nexport const newsListStyles = makeStyles({\n  list: {\n    padding: \"0 30px\",\n    overflowX: \"hidden\",\n    listStyle: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n    maxWidth: \"1400px\",\n    alignItems: \"center\",\n    minHeight: \"800px\",\n    marginTop: \"140px\",\n    \"@media (min-width: 450px)\": {\n      marginTop: \"60px\",\n    },\n  },\n});\n","import React from \"react\";\r\nimport NewsListItem  from \"./newsListItem/NewsListItem\";\r\nimport { newListTypes } from \"./newsListTypes\";\r\nimport { getIsLoading } from \"../../../redux/news/selectors/selectors\";\r\nimport ButtonDownload from \"../downloadButton/ButtonDownload\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { newsListStyles } from \"./newsListStyles\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n const NewsList: React.FC<newListTypes> = ({ news }) => {\r\n  const s = newsListStyles();\r\n  const { t } = useTranslation();\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  return (\r\n    <Box className={s.list}>\r\n      <Typography   sx={{fontFamily: 'Railway',}} variant=\"h3\"> {t(\"newsList\")}</Typography>\r\n\r\n      {news.flat().map((item) => (\r\n        <NewsListItem key={item.id} item={item} />\r\n      ))}\r\n\r\n      {isLoading ? <Typography>Loading...</Typography> : \"\"}\r\n      {news.length !== 0 ? <ButtonDownload /> : \"\"}\r\n    </Box>\r\n  );\r\n};\r\n export default React.memo(NewsList)","import React, { useEffect } from \"react\";\r\nimport NewsList  from \"../../features/components/newsList/NewsList\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchNews } from \"../../redux/news/operations\";\r\nimport {\r\n  getCurrentPage,\r\n  getFlag,\r\n  getNews,\r\n} from \"../../redux/news/selectors/selectors\";\r\n\r\nconst NewsPage = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const news = useSelector(getNews);\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const flag = useSelector(getFlag);\r\n\r\n  useEffect(() => {\r\n    if (!flag) {\r\n      dispatch(fetchNews(currentPage));\r\n    }\r\n  }, [dispatch, currentPage, flag]);\r\n\r\n  return <NewsList news={news} />;\r\n};\r\n\r\nexport default  NewsPage;\r\n","import { stateType } from \"./selectorTypes\";\r\n\r\nexport const getNews = (state: stateType) => state.news.news;\r\nexport const getCurrentPage = (state: stateType) => state.news.currentPage;\r\nexport const getFlag = (state: stateType) => state.news.flag;\r\nexport const getStatus = (state: stateType) => state.news.status;\r\nexport const getError = (state: stateType) => state.news.error;\r\nexport const getIsLoading = (state: stateType) => state.news.isLoading;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zm2-8h6v8H5v-8zm5-6H6L5 5H2v2h12V5h-3z\"\n}), 'DeleteSweepOutlined');\nexports.default = _default;"],"names":["newListItemStyles","makeStyles","itemWrapper","display","justifyContent","gap","alignItems","padding","itemContainer","backgroundColor","boxShadow","borderRadius","width","deleteIcon","borderLeft","cursor","color","NewsListItem","item","useState","slide","setSlide","s","dispatch","useDispatch","handleDelete","useCallback","id","setTimeout","deleteNews","Slide","in","timeout","direction","Box","className","Stack","spacing","Typography","title","DeleteSweepOutlined","onClick","e","prev","React","buttonDownloadStyles","buttonWrapper","zIndex","lastRef","useRef","news","useSelector","getNews","t","useTranslation","useEffect","current","scrollIntoView","behavior","block","inline","showMore","increment","setFlag","Button","sx","ref","newsListStyles","list","overflowX","listStyle","flexDirection","maxWidth","minHeight","marginTop","NewsList","isLoading","getIsLoading","fontFamily","variant","flat","map","length","currentPage","getCurrentPage","flag","getFlag","fetchNews","state","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}