{"version":3,"file":"static/js/610.76cbb24c.chunk.js","mappings":"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","sources":["features/ui/buttons/SignInButton.tsx","features/components/authorization/authForm/authFormStyles.ts","features/components/authorization/authForm/AuthForm.tsx","features/components/authorization/authorizationStyles.ts","features/components/authorization/Authorization.tsx","features/components/languageSwitcher/buttonsLanguage/buttonEngLang.tsx","features/components/languageSwitcher/buttonsLanguage/buttonUkrLang.tsx","features/components/languageSwitcher/LanguageSwitcher.tsx","features/ui/buttons/ButtonHome.tsx","features/ui/buttons/ButtonNews.tsx","features/ui/buttons/ButtonProfile.tsx","features/components/navBar/navBarStyles.ts","features/components/navBar/NavBar.tsx","features/ui/sharedLayout/sharedLayoutStyles.ts","features/ui/sharedLayout/SharedLayout.tsx","helpers/locatStorage.ts","redux/news/selectors/selectors.ts"],"sourcesContent":["import { useNavigate } from \"react-router\";\r\nimport { Button } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst SignInButton = styled(Button)({\r\n    margin: \"8px 0\",\r\n    backgroundColor: \"black\",\r\n    color: \"lightsteelblue\" ,\r\n    \"&:hover\": {\r\n        color: \"burlywood\",\r\n        backgroundColor:\"black\"\r\n    },  \"&:focus\":{\r\n        color:\"orange\"\r\n      },\r\n}) as typeof Button;\r\n\r\nconst ButtonProfile: React.FC = () => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <SignInButton type=\"submit\" onClick={() => navigate(\"/profile\")}>\r\n           Sign IN\r\n        </SignInButton>\r\n    );\r\n};\r\nexport default ButtonProfile;\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nexport const authFormStyles = makeStyles({\r\n    paper: {\r\n        padding: 10,\r\n        height: \"230px\",\r\n        width: \"200px\",\r\n        margin: \"20px auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"10px\",\r\n        borderColor: \"purple\",\r\n        boxShadow: \"3px 3px 3px 3px black\",\r\n        color: \"black\",\r\n        backgroundColor: \"lightgoldenrodyellow\",\r\n    },\r\n    signInButton: {\r\n        margin: \"8px 0\",\r\n        backgroundColor: \"black\",\r\n        color: \"mediumslateblue\",\r\n    },\r\n    logOutIcon: {\r\n        position: \"absolute\",\r\n        right: \"5px\",\r\n        borderRadius: \"50%\",\r\n        \"&:hover\": {\r\n            color: \"burlywood\",\r\n          }, \r\n          \"&:focus\": {\r\n            color: \"orange\",\r\n          },\r\n    },\r\n    authTitle:{\r\n        display:\"flex\",\r\n        justifyContent:\"center\"\r\n    }\r\n});","import React, { useState } from \"react\";\r\nimport { Grid, Box, TextField, Button, InputAdornment } from \"@mui/material\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { AuthFormTypes } from \"../authorizationTypes\";\r\nimport SignInButton from \"../../../ui/buttons/SignInButton\";\r\nimport {authFormStyles} from \"./authFormStyles\";\r\n\r\nconst AuthForm: React.FC<AuthFormTypes> = ({\r\n  setPassword,\r\n  setUserName,\r\n  userName,\r\n  password,\r\n  setHideForm,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const s = authFormStyles();\r\n\r\n  const handleCloseForm = (): void => {\r\n    setHideForm((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Box className={s.paper} >\r\n        <LogoutIcon className={s.logOutIcon} onClick={handleCloseForm} />\r\n        <Grid className={s.authTitle}>\r\n          <h3>Authorization</h3>\r\n        </Grid>\r\n        <TextField\r\n          size=\"small\"\r\n          value={userName}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          label=\"Username\"\r\n          placeholder=\"Enter username\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          size=\"small\"\r\n          value={password}\r\n          label=\"Password\"\r\n          placeholder=\"Enter password\"\r\n          fullWidth\r\n          required\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type={visible ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                onClick={() => setVisible((i) => !i)}\r\n                position={\"end\"}\r\n              >\r\n                {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n\r\n        />\r\n        <SignInButton />\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nexport const authorizationStyles = makeStyles({\r\n    modal: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: 280,\r\n        backgroundColor: \"black\",\r\n        border: \"2px solid #000\",\r\n        padding: 35,\r\n        borderRadius: 10,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        top: \"60px\",\r\n        right: \"1px\",\r\n        zIndex:\"100\"\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n        cursor: \"pointer\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        minWidth:\"120px\"\r\n    },\r\n    buttonHide: {\r\n        display: \"flex\",\r\n        minWidth:\"120px\",\r\n        \"&:hover\": {\r\n            color: \"secondary\",\r\n        },\r\n        \"&:focus\":{\r\n            color:\"orange\"\r\n          },\r\n\r\n    },\r\n});","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthForm from \"./authForm/AuthForm\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"../../../redux/news/newsSlice\";\r\nimport { Box, Modal, Typography, Slide, Button } from \"@mui/material\";\r\nimport LoginIcon from \"@mui/icons-material/Login\";\r\nimport {authorizationStyles} from \"./authorizationStyles\";\r\nimport {\r\n  getLocalStorageItem,\r\n  setLocalStorageItem,\r\n} from \"../../../helpers/locatStorage\";\r\n\r\nconst Authorization = () => {\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [hideForm, setHideForm] = useState<boolean>(false);\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const dispatch = useDispatch();\r\n  const { t, i18n } = useTranslation();\r\n  const s = authorizationStyles();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.length !== 0) {\r\n      const access = getLocalStorageItem();\r\n      dispatch(setLogin(access.isLogged));\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (userName === \"admin\" && password === \"12345\") {\r\n      setLocalStorageItem(userName, password);\r\n      dispatch(setLogin(true));\r\n      navigate(\"/profile\");\r\n    } else {\r\n      handleOpen();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={s.buttonWrapper} role=\"button\">\r\n      <Button \r\n        className={s.buttonHide}\r\n        onClick={() => setHideForm((prev) => !prev)}\r\n      >\r\n        <LoginIcon /> {t(\"login\")}\r\n      </Button>\r\n      <Slide in={hideForm} timeout={1000} direction=\"down\">\r\n        <Box\r\n          className={s.form}\r\n          component=\"form\"\r\n          sx={{ visibility: hideForm ? \"visible\" : \"hidden\" }}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <AuthForm\r\n            setUserName={setUserName}\r\n            setPassword={setPassword}\r\n            password={password}\r\n            userName={userName}\r\n            setHideForm={setHideForm}\r\n          />\r\n        </Box>\r\n      </Slide>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box className={s.modal}>\r\n          <Typography\r\n            id=\"modal-modal-description\"\r\n            variant=\"h6\"\r\n            color={\"lightgoldenrodyellow\"}\r\n          >\r\n            Wrong username or password\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Authorization;\r\n","import {styled} from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const ButtonEngLang = styled(Button)({\r\n    width: \"3px\",\r\n    height: \"20px\",\r\n    color: \"lightsteelblue\",\r\n    transition: \"1s\",\r\n    \"&:focus\": {\r\n        backgroundColor: \"gray\",\r\n        color:\"orange\"\r\n    },\r\n    \"&:hover\": {\r\n        color: \"burlywood\",\r\n        backgroundColor: \"gray\",\r\n    },\r\n}) as typeof Button;","import {styled} from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const ButtonUkrLang = styled(Button)({\r\n    width: \"3px\",\r\n    height: \"20px\",\r\n    transition: \"1s\",\r\n    color: \"lightgoldenrodyellow\",\r\n    \"&:focus\": {\r\n        backgroundColor: \"gray\",\r\n        color:\"orange\"\r\n    },\r\n    \"&:hover\": {\r\n        color: \"burlywood\",\r\n        backgroundColor: \"gray\",\r\n    },\r\n}) as typeof Button;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Stack\";\r\nimport i18n from \"i18next\";\r\nimport {ButtonEngLang} from \"./buttonsLanguage/buttonEngLang\";\r\nimport {ButtonUkrLang} from \"./buttonsLanguage/buttonUkrLang\";\r\n\r\n\r\nconst LanguageSwitcher = () => {\r\n  const [langEn, setLangEn] = useState(false);\r\n  const [langUkr, setLangUkr] = useState(true);\r\n\r\n  const switchLanguage = (e: any) => {\r\n    if (e.target.dataset.leng === \"false\") {\r\n      setLangEn((prev) => !prev);\r\n      setLangUkr((prev) => !prev);\r\n    }\r\n\r\n    i18n.changeLanguage(e.target.id, (err, t) => {\r\n      console.log(e.target.id);\r\n      if (err) return console.log(\"something went wrong loading\", err);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexDirection:\"row\",\r\n        gap: \"10px\",\r\n        alignItems: \"center\",\r\n        padding: \"0 15px\",\r\n      }}\r\n    >\r\n      <ButtonUkrLang\r\n        data-leng={langUkr}\r\n        sx={{ backgroundColor: langUkr ? \"gray\" : \"black\" }}\r\n        onClick={(e) => switchLanguage(e)}\r\n        id={\"ukr\"}\r\n        variant=\"text\"\r\n      >\r\n        Ukr\r\n      </ButtonUkrLang>\r\n      <ButtonEngLang\r\n        data-leng={langEn}\r\n        sx={{ backgroundColor: langEn ? \"gray\" : \"black\" }}\r\n        onClick={(e) => switchLanguage(e)}\r\n        id={\"eng\"}\r\n        variant=\"text\"\r\n      >\r\n        Eng\r\n      </ButtonEngLang>\r\n    </Box>\r\n  );\r\n};\r\nexport default LanguageSwitcher;\r\n","import { useNavigate } from \"react-router\";\r\nimport {Button, useMediaQuery} from \"@mui/material\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst HomeButton = styled(Button)({\r\n  my: 2,\r\n  \"&:hover\": {\r\n    color:\"secondary\",\r\n  },\r\n   \"&:focus\":{\r\n    color:\"orange\"\r\n  },\r\n  color: \"primary\",\r\n  display: \"flex\",\r\n  justifyContent:\"flex-end\",\r\n  alignItems:\"flex-end\",\r\n  height:\"45px\",\r\n  minWidth:\"120px\",\r\n \r\n}) as typeof Button;\r\n\r\nconst ButtonHome: React.FC = () => {\r\n  const {t} = useTranslation()\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <HomeButton onClick={() => navigate(\"/home\")}>\r\n      {t(\"home\")}\r\n      <HomeIcon sx={{alignSelf:\"flex-start\", display:\"flex\"}} />\r\n    </HomeButton>\r\n  );\r\n};\r\nexport default ButtonHome;\r\n","import { useNavigate } from \"react-router\";\r\nimport { Button } from \"@mui/material\";\r\nimport NewspaperIcon from \"@mui/icons-material/Newspaper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst NewsButton = styled(Button)({\r\n  my: 2,\r\n  \"&:hover\": {\r\n    color: \"secondary\",\r\n  },\r\n  \"&:focus\": {\r\n    color: \"orange\",\r\n  },\r\n  color: \"primary\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  height: \"45px\",\r\n  alignItems: \"flex-end\",\r\n  minWidth: \"120px\",\r\n}) as typeof Button;\r\n\r\nconst ButtonNews: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <NewsButton onClick={() => navigate(\"/news\")}>\r\n      {t(\"news\")}\r\n      <NewspaperIcon sx={{ alignSelf: \"flex-start\" }} />\r\n    </NewsButton>\r\n  );\r\n};\r\nexport default ButtonNews;\r\n","import { useNavigate } from \"react-router\";\r\nimport { Button } from \"@mui/material\";\r\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ProfileButton = styled(Button)({\r\n  my: 2,\r\n  \"&:hover\": {\r\n    color: \"secondary\",\r\n  },\r\n  \"&:focus\":{\r\n    color:\"orange\"\r\n  },\r\n  color: \"primary\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  height: \"45px\",\r\n  alignItems: \"flex-end\",\r\n  minWidth:\"120\",\r\n}) as typeof Button;\r\n\r\nconst ButtonProfile: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ProfileButton onClick={() => navigate(\"/profile\")}>\r\n      {t(\"profile\")}\r\n      <AccountBoxIcon sx={{ alignSelf: \"flex-start\" }} />\r\n    </ProfileButton>\r\n  );\r\n};\r\nexport default ButtonProfile;\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nexport const navBarStyles = makeStyles({\r\n    navBarWrapper: {\r\n        backgroundColor: \"black\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        zIndex: 10,\r\n        width: \"100%\",\r\n        minHeight: \"50px\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        maxWidth: \"1400px\",\r\n    },\r\n    buttonsWrapper: {\r\n        display: \"flex\",\r\n        flexDirection:\"column\",\r\n        padding:\"9px\"\r\n    },\r\n    buttonProfile: {\r\n        my: 2,\r\n        color: \"lightgoldenrodyellow\",\r\n        display: \"block\",\r\n    }, \"@media (min-width: 450px)\": {\r\n        buttonsWrapper: {\r\n         flexDirection:\"row\",\r\n        }\r\n    }\r\n});","import Authorization from \"../authorization/Authorization\";\r\nimport { getIsLogged } from \"../../../redux/news/selectors/selectors\";\r\nimport LanguageSwitcher from \"../languageSwitcher/LanguageSwitcher\";\r\nimport ButtonHome from \"../../ui/buttons/ButtonHome\";\r\nimport ButtonNews from \"../../ui/buttons/ButtonNews\";\r\nimport ButtonProfile from \"../../ui/buttons/ButtonProfile\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {navBarStyles} from \"./navBarStyles\";\r\nimport React from \"react\";\r\n\r\nconst NavBar = () => {\r\n  const s = navBarStyles();\r\n  const isLogged = useSelector(getIsLogged);\r\n\r\n  return (\r\n    <Box className={s.navBarWrapper}>\r\n      <Box className={s.buttonsWrapper}>\r\n        <ButtonHome />\r\n        <ButtonNews />\r\n        {isLogged ? <ButtonProfile /> : <Authorization />}\r\n      </Box>\r\n      <LanguageSwitcher />\r\n    </Box>\r\n  );\r\n};\r\nexport default React.memo(NavBar) ;\r\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const sharedLayoutStyles = makeStyles({\r\n    container: {\r\n      border: \"13px solid black\",\r\n      backgroundColor: \"burlywood\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      minHeight: \"800px\",\r\n      maxWidth: \"1400px\",\r\n      margin: \"0 auto\",\r\n    },\r\n  });\r\n  ","import React from \"react\";\r\nimport { Outlet } from \"react-router\";\r\nimport NavBar from \"../../components/navBar/NavBar\";\r\nimport { Box } from \"@mui/material\";\r\nimport { sharedLayoutStyles } from \"./sharedLayoutStyles\";\r\n\r\nfunction SharedLayout() {\r\n  const s = sharedLayoutStyles();\r\n\r\n  return (\r\n    <Box className={s.container}>\r\n      <NavBar />\r\n      <Outlet />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SharedLayout;\r\n","export const setLocalStorageItem = (userName: string, password: string) =>\r\n  localStorage.setItem(\r\n    \"currentUser\",\r\n    JSON.stringify({\r\n      username: userName,\r\n      password: password,\r\n      isLogged: true,\r\n    })\r\n  );\r\n\r\nexport const getLocalStorageItem = () => {\r\n  let access;\r\n  const key = localStorage.getItem(\"currentUser\");\r\n  if (key != null) {\r\n    access = JSON.parse(key);\r\n  }\r\n  return access;\r\n};\r\n","import { stateType } from \"./selectorTypes\";\r\n\r\nexport const getNews = (state: stateType) => state.news.news;\r\nexport const getCurrentPage = (state: stateType) => state.news.currentPage;\r\nexport const getFlag = (state: stateType) => state.news.flag;\r\nexport const getStatus = (state: stateType) => state.news.status;\r\nexport const getError = (state: stateType) => state.news.error;\r\nexport const getIsLogged = (state: stateType) => state.news.isLogged;\r\nexport const getIsLoading = (state: stateType) => state.news.isLoading;\r\n"],"names":["SignInButton","styled","Button","margin","backgroundColor","color","navigate","useNavigate","type","onClick","authFormStyles","makeStyles","paper","padding","height","width","display","flexDirection","gap","borderColor","boxShadow","signInButton","logOutIcon","position","right","borderRadius","authTitle","justifyContent","setPassword","setUserName","userName","password","setHideForm","useState","visible","setVisible","s","Grid","Box","className","Logout","prevState","TextField","size","value","onChange","e","target","label","placeholder","fullWidth","required","InputProps","endAdornment","InputAdornment","i","Visibility","VisibilityOff","authorizationStyles","modal","top","left","transform","border","form","zIndex","buttonWrapper","cursor","alignItems","minWidth","buttonHide","hideForm","open","setOpen","dispatch","useDispatch","useTranslation","t","i18n","useEffect","localStorage","length","access","getLocalStorageItem","setLogin","isLogged","role","prev","Login","Slide","in","timeout","direction","component","sx","visibility","onSubmit","event","preventDefault","setLocalStorageItem","Modal","onClose","Typography","id","variant","ButtonEngLang","transition","ButtonUkrLang","langEn","setLangEn","langUkr","setLangUkr","switchLanguage","dataset","leng","err","console","log","HomeButton","my","Home","alignSelf","NewsButton","Newspaper","ProfileButton","AccountBox","navBarStyles","navBarWrapper","minHeight","maxWidth","buttonsWrapper","buttonProfile","NavBar","useSelector","getIsLogged","React","sharedLayoutStyles","container","setItem","JSON","stringify","username","key","getItem","parse","getNews","state","news","getCurrentPage","currentPage","getFlag","flag","getStatus","status","getError","error","getIsLoading","isLoading"],"sourceRoot":""}