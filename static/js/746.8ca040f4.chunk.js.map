{"version":3,"file":"static/js/746.8ca040f4.chunk.js","mappings":"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","sources":["features/ui/buttons/SignInButton.tsx","features/components/authorization/authForm/authFormStyles.ts","features/components/authorization/authForm/AuthForm.tsx","features/components/authorization/authorizationStyles.ts","features/components/authorization/Authorization.tsx","features/components/languageSwitcher/buttonsLanguage/buttonEngLang.tsx","features/components/languageSwitcher/buttonsLanguage/buttonUkrLang.tsx","features/components/languageSwitcher/LanguageSwitcher.tsx","redux/auth/selectors/selectors.ts","features/components/navBar/navBarStyles.ts","features/ui/buttons/buttonsStyle.ts","features/ui/buttons/ButtonHome.tsx","features/ui/buttons/ButtonNews.tsx","features/ui/buttons/ButtonProfile.tsx","features/components/navBar/NavBar.tsx","features/ui/sharedLayout/sharedLayoutStyles.ts","features/ui/sharedLayout/SharedLayout.tsx","helpers/locatStorage.ts"],"sourcesContent":["import { useNavigate } from \"react-router\";\r\nimport { Button } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst SignInButton = styled(Button)({\r\n    margin: \"8px 0\",\r\n    backgroundColor: \"black\",\r\n    color: \"lightsteelblue\" ,\r\n    \"&:hover\": {\r\n        color: \"burlywood\",\r\n        backgroundColor:\"black\"\r\n    },  \"&:focus\":{\r\n        color:\"orange\"\r\n      },\r\n}) as typeof Button;\r\n\r\nconst ButtonProfile: React.FC = () => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <SignInButton type=\"submit\" onClick={() => navigate(\"/profile\")}>\r\n           Sign IN\r\n        </SignInButton>\r\n    );\r\n};\r\nexport default ButtonProfile;\r\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const authFormStyles = makeStyles({\r\n  paper: {\r\n    padding: 10,\r\n    height: \"230px\",\r\n    width: \"200px\",\r\n    margin: \"20px auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"10px\",\r\n    borderColor: \"purple\",\r\n    boxShadow: \"3px 3px 3px 3px black\",\r\n    color: \"black\",\r\n    backgroundColor: \"lightgray\",\r\n  },\r\n  signInButton: {\r\n    margin: \"8px 0\",\r\n    backgroundColor: \"black\",\r\n    color: \"mediumslateblue\",\r\n  },\r\n  logOutIcon: {\r\n    position: \"absolute\",\r\n    right: \"5px\",\r\n    borderRadius: \"50%\",\r\n    \"&:hover\": {\r\n      color: \"burlywood\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"orange\",\r\n    },\r\n  },\r\n  authTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport SignInButton from \"../../../ui/buttons/SignInButton\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { authFormStyles } from \"./authFormStyles\";\r\nimport { AuthFormTypes } from \"../authorizationTypes\";\r\n\r\nconst AuthForm: React.FC<AuthFormTypes> = ({\r\n  setPassword,\r\n  setUserName,\r\n  userName,\r\n  password,\r\n  setHideForm,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const s = authFormStyles();\r\n  const handleCloseForm = (): void => {\r\n    setHideForm((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Box className={s.paper}>\r\n        <LogoutIcon className={s.logOutIcon} onClick={handleCloseForm} />\r\n        <Grid className={s.authTitle}>\r\n          <Typography variant=\"h6\">Authorization</Typography>\r\n        </Grid>\r\n        <TextField\r\n          size=\"small\"\r\n          value={userName}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          label=\"Username\"\r\n          placeholder=\"Enter username\"\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          size=\"small\"\r\n          value={password}\r\n          label=\"Password\"\r\n          placeholder=\"Enter password\"\r\n          fullWidth\r\n          required\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type={visible ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment\r\n                onClick={() => setVisible((i) => !i)}\r\n                position={\"end\"}\r\n              >\r\n                {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <SignInButton />\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nexport const authorizationStyles = makeStyles({\r\n    modal: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: 280,\r\n        backgroundColor: \"black\",\r\n        border: \"2px solid #000\",\r\n        padding: 35,\r\n        borderRadius: 10,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        top: \"60px\",\r\n        right: \"1px\",\r\n        zIndex:\"100\"\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        position: \"relative\",\r\n        cursor: \"pointer\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        minWidth:\"120px\"\r\n    },\r\n    buttonHide: {\r\n        display: \"flex\",\r\n        minWidth:\"120px\",\r\n        color:\"gray\",\r\n        \"&:hover\": {\r\n            color: \"secondary\",\r\n        },\r\n        \"&:focus\":{\r\n            color:\"lightsteelblue\"\r\n          },\r\n    },\r\n});","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthForm from \"./authForm/AuthForm\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"../../../redux/auth/authSlice\";\r\nimport { Box, Modal, Typography, Slide, Button } from \"@mui/material\";\r\nimport LoginIcon from \"@mui/icons-material/Login\";\r\nimport { authorizationStyles } from \"./authorizationStyles\";\r\nimport {\r\n  getLocalStorageItem,\r\n  setLocalStorageItem,\r\n} from \"../../../helpers/locatStorage\";\r\n\r\nconst Authorization = () => {\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [hideForm, setHideForm] = useState<boolean>(false);\r\n  const [open, setOpen] = useState(false);\r\n  const { t } = useTranslation();\r\n  const s = authorizationStyles();\r\n  const navigate = useNavigate();\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (localStorage.length !== 0) {\r\n      const access = getLocalStorageItem();\r\n      dispatch(setLogin(access.isLogged));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (userName === \"admin\" && password === \"12345\") {\r\n      setLocalStorageItem(userName, password);\r\n      dispatch(setLogin(true));\r\n      navigate(\"/profile\");\r\n    } else {\r\n      handleOpen();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={s.buttonWrapper} role=\"button\">\r\n      <Button\r\n        className={s.buttonHide}\r\n        onClick={() => setHideForm((prev) => !prev)}\r\n      >\r\n        <LoginIcon /> {t(\"login\")}\r\n      </Button>\r\n      <Slide in={hideForm} timeout={1000} direction=\"down\">\r\n        <Box\r\n          className={s.form}\r\n          component=\"form\"\r\n          sx={{ visibility: hideForm ? \"visible\" : \"hidden\" }}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <AuthForm\r\n            setUserName={setUserName}\r\n            setPassword={setPassword}\r\n            password={password}\r\n            userName={userName}\r\n            setHideForm={setHideForm}\r\n          />\r\n        </Box>\r\n      </Slide>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box className={s.modal}>\r\n          <Typography\r\n            id=\"modal-modal-description\"\r\n            variant=\"h6\"\r\n            color={\"lightgoldenrodyellow\"}\r\n          >\r\n            Wrong username or password\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Authorization;\r\n","import {styled} from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const ButtonEngLang = styled(Button)({\r\n    width: \"3px\",\r\n    height: \"20px\",\r\n    color: \"lightsteelblue\",\r\n    transition: \"1s\",\r\n    \"&:focus\": {\r\n        backgroundColor: \"gray\",\r\n        color:\"orange\"\r\n    },\r\n    \"&:hover\": {\r\n        color: \"burlywood\",\r\n        backgroundColor: \"gray\",\r\n    },\r\n}) as typeof Button;","import {styled} from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const ButtonUkrLang = styled(Button)({\r\n    width: \"3px\",\r\n    height: \"20px\",\r\n    transition: \"1s\",\r\n    color: \"lightgoldenrodyellow\",\r\n    \"&:focus\": {\r\n        backgroundColor: \"gray\",\r\n        color:\"orange\"\r\n    },\r\n    \"&:hover\": {\r\n        color: \"burlywood\",\r\n        backgroundColor: \"gray\",\r\n    },\r\n}) as typeof Button;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Stack\";\r\nimport i18n from \"i18next\";\r\nimport {ButtonEngLang} from \"./buttonsLanguage/buttonEngLang\";\r\nimport {ButtonUkrLang} from \"./buttonsLanguage/buttonUkrLang\";\r\n\r\nconst LanguageSwitcher = () => {\r\n  const [langEn, setLangEn] = useState(false);\r\n  const [langUkr, setLangUkr] = useState(true);\r\n\r\n  const switchLanguage = (e: any) => {\r\n    if (e.target.dataset.leng === \"false\") {\r\n      setLangEn((prev) => !prev);\r\n      setLangUkr((prev) => !prev);\r\n    }\r\n\r\n    i18n.changeLanguage(e.target.id, (err, t) => {\r\n      console.log(e.target.id);\r\n      if (err) return console.log(\"something went wrong loading\", err);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexDirection:\"row\",\r\n        gap: \"10px\",\r\n        alignItems: \"center\",\r\n        padding: \"0 15px\",\r\n      }}\r\n    >\r\n      <ButtonUkrLang\r\n        data-leng={langUkr}\r\n        sx={{ backgroundColor: langUkr ? \"gray\" : \"black\" }}\r\n        onClick={(e) => switchLanguage(e)}\r\n        id={\"ukr\"}\r\n        variant=\"text\"\r\n      >\r\n        Ukr\r\n      </ButtonUkrLang>\r\n      <ButtonEngLang\r\n        data-leng={langEn}\r\n        sx={{ backgroundColor: langEn ? \"gray\" : \"black\" }}\r\n        onClick={(e) => switchLanguage(e)}\r\n        id={\"eng\"}\r\n        variant=\"text\"\r\n      >\r\n        Eng\r\n      </ButtonEngLang>\r\n    </Box>\r\n  );\r\n};\r\nexport default LanguageSwitcher;\r\n","import { stateAuthType } from \"./selectorTypes\";\r\n\r\nexport const getIsLogged = (state: stateAuthType) => state.auth.isLogged;\r\n\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nexport const navBarStyles = makeStyles({\r\n    navBarWrapper: {\r\n        backgroundColor: \"black\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        zIndex: 10,\r\n        width: \"100%\",\r\n        minHeight: \"50px\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        maxWidth: \"1400px\",\r\n    },\r\n    buttonsWrapper: {\r\n        display: \"flex\",\r\n        flexDirection:\"column\",\r\n        padding:\"15px\",\r\n        gap:\"10px\"\r\n    },\r\n    buttonProfile: {\r\n        my: 2,\r\n        color: \"lightgoldenrodyellow\",\r\n        display: \"block\",\r\n    }, \"@media (min-width: 450px)\": {\r\n        buttonsWrapper: {\r\n         flexDirection:\"row\",\r\n        }\r\n    }\r\n});","\r\nexport const isActiveStyle = {\r\n    textDecoration: \"none\",\r\n    color: \"orange\",\r\n    minWidth:\"100px\",\r\n    display:\"flex\",\r\n    justifyContent:\"flex-end\",\r\n    alignItems:\"center\"\r\n};\r\nexport const notActive = {\r\n    textDecoration: \"none\",\r\n    color: \"#FAFAD2\",\r\n    minWidth:\"100px\",\r\n    display:\"flex\",\r\n    justifyContent:\"flex-end\",\r\n    alignItems:\"center\"\r\n};\r\n","\r\nimport { NavLink } from \"react-router-dom\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {isActiveStyle, notActive} from \"./buttonsStyle\";\r\n\r\nconst ButtonHome: React.FC = () => {\r\n  const {t} = useTranslation()\r\n  return (\r\n      <NavLink\r\n          style={({ isActive }) => (isActive ? isActiveStyle : notActive)}\r\n          to=\"/\"\r\n      >\r\n        {t(\"home\")}\r\n        <HomeIcon  />\r\n      </NavLink>\r\n  );\r\n};\r\nexport default ButtonHome;\r\n","\r\nimport { NavLink } from \"react-router-dom\";\r\nimport NewspaperIcon from \"@mui/icons-material/Newspaper\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {isActiveStyle, notActive} from \"./buttonsStyle\";\r\n\r\nconst ButtonNews: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n      <NavLink\r\n          style={({ isActive }) => (isActive ? isActiveStyle : notActive)}\r\n          to=\"/news\"\r\n      >\r\n        {t(\"news\")}\r\n        <NewspaperIcon />\r\n      </NavLink>\r\n  );\r\n};\r\nexport default ButtonNews;\r\n","import {NavLink} from \"react-router-dom\";\r\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\r\nimport React from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {isActiveStyle, notActive} from \"./buttonsStyle\";\r\n\r\n\r\nexport const ButtonProfile: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n      <NavLink\r\n          style={({ isActive }) =>\r\n              isActive ? isActiveStyle : notActive\r\n          }\r\n          to=\"/profile\"\r\n      >\r\n        {t(\"profile\")}\r\n        <AccountBoxIcon />\r\n      </NavLink>\r\n  )\r\n};\r\nexport default ButtonProfile;\r\n","import Authorization from \"../authorization/Authorization\";\nimport LanguageSwitcher from \"../languageSwitcher/LanguageSwitcher\";\nimport { getIsLogged } from \"../../../redux/auth/selectors/selectors\";\nimport Box from \"@mui/material/Box\";\nimport { useSelector } from \"react-redux\";\nimport { navBarStyles } from \"./navBarStyles\";\nimport React from \"react\";\nimport ButtonHome from \"../../ui/buttons/ButtonHome\";\nimport ButtonNews from \"../../ui/buttons/ButtonNews\";\nimport ButtonProfile from \"../../ui/buttons/ButtonProfile\";\n\nconst NavBar = () => {\n  const s = navBarStyles();\n  const isLogged = useSelector(getIsLogged);\n\n  return (\n    <Box className={s.navBarWrapper}>\n      <Box className={s.buttonsWrapper}>\n      <ButtonHome/>\n      <ButtonNews/>\n        {isLogged ? (\n          <ButtonProfile/>\n        ) : (\n          <Authorization />\n        )}\n      </Box>\n      <LanguageSwitcher />\n    </Box>\n  );\n};\nexport default React.memo(NavBar);\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nexport const sharedLayoutStyles = makeStyles({\r\n    container: {\r\n      border: \"13px solid black\",\r\n      backgroundColor: \"burlywood\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      minHeight: \"800px\",\r\n      maxWidth: \"1400px\",\r\n      margin: \"0 auto\",\r\n    },\r\n  });\r\n  ","import React from \"react\";\r\nimport { Outlet } from \"react-router\";\r\nimport NavBar from \"../../components/navBar/NavBar\";\r\nimport { Box } from \"@mui/material\";\r\nimport { sharedLayoutStyles } from \"./sharedLayoutStyles\";\r\n\r\nfunction SharedLayout() {\r\n  const s = sharedLayoutStyles();\r\n\r\n  return (\r\n    <Box className={s.container}>\r\n      <NavBar />\r\n      <Outlet />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SharedLayout;\r\n","export const setLocalStorageItem = (userName: string, password: string) =>\r\n  localStorage.setItem(\r\n    \"currentUser\",\r\n    JSON.stringify({\r\n      username: userName,\r\n      password: password,\r\n      isLogged: true,\r\n    })\r\n  );\r\n\r\nexport const getLocalStorageItem = () => {\r\n  let access;\r\n  const key = localStorage.getItem(\"currentUser\");\r\n  if (key != null) {\r\n    access = JSON.parse(key);\r\n  }\r\n  return access;\r\n};\r\n"],"names":["SignInButton","styled","Button","margin","backgroundColor","color","navigate","useNavigate","type","onClick","authFormStyles","makeStyles","paper","padding","height","width","display","flexDirection","gap","borderColor","boxShadow","signInButton","logOutIcon","position","right","borderRadius","authTitle","justifyContent","setPassword","setUserName","userName","password","setHideForm","useState","visible","setVisible","s","Grid","Box","className","Logout","prevState","Typography","variant","TextField","size","value","onChange","e","target","label","placeholder","fullWidth","required","InputProps","endAdornment","InputAdornment","i","Visibility","VisibilityOff","authorizationStyles","modal","top","left","transform","border","form","zIndex","buttonWrapper","cursor","alignItems","minWidth","buttonHide","hideForm","open","setOpen","t","useTranslation","dispatch","useDispatch","useEffect","localStorage","length","access","getLocalStorageItem","setLogin","isLogged","role","prev","Login","Slide","in","timeout","direction","component","sx","visibility","onSubmit","event","preventDefault","setLocalStorageItem","Modal","onClose","id","ButtonEngLang","transition","ButtonUkrLang","langEn","setLangEn","langUkr","setLangUkr","switchLanguage","dataset","leng","i18n","err","console","log","getIsLogged","state","auth","navBarStyles","navBarWrapper","minHeight","maxWidth","buttonsWrapper","buttonProfile","my","isActiveStyle","textDecoration","notActive","style","isActive","to","Home","Newspaper","AccountBox","NavBar","useSelector","React","sharedLayoutStyles","container","setItem","JSON","stringify","username","key","getItem","parse"],"sourceRoot":""}